services:
  postgres: 
    image: postgres:latest
    container_name: laravel_postgres
    restart: unless-stopped
    environment:
      PGPASSWORD: '${DB_PASSWORD}'
      POSTGRES_DB: '${DB_DATABASE}'
      POSTGRES_USER: '${DB_USERNAME}'
      POSTGRES_PASSWORD: '${DB_PASSWORD}'
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - laravel_network

  redis:
    image: redis:latest
    container_name: laravel_redis
    command: [ "redis-server", "--requirepass", "${REDIS_PASSWORD}", "--maxmemory", "2gb" ]
    restart: unless-stopped
    ports: 
      - "127.0.0.1:6379:6379"
    networks:
      - laravel_network

  minio:
    image: 'minio/minio:latest'
    security_opt:
      - no-new-privileges:true
    environment:
      MINIO_ROOT_USER: '${MINIO_ROOT_USER}'
      MINIO_ROOT_PASSWORD: '${MINIO_ROOT_PASSWORD}'
    volumes:
      - 'stack-minio:/data/minio'
    networks:
      - laravel_network
    command: 'minio server /data/minio --console-address ":8900"'
    restart: always

  # traefik:
  #   image: traefik:v3.3
  #   container_name: traefik
  #   command:
  #     - --api.insecure=true
  #     - --entryPoints.web.address=:80
  #     - --providers.file.directory=/etc/traefik/dynamic_conf
  #     - --providers.file.watch=true
  #   ports:
  #     - "80:80"
  #     - "8080:8080"
  #   volumes:
  #     - ./traefik/dynamic_conf:/etc/traefik/dynamic_conf
  #   extra_hosts:
  #     - "host.docker.internal:host-gateway"
  #   networks:
  #     - laravel_network

volumes:
  postgres_data:
  stack-minio:

networks:
  laravel_network:
    driver: bridge
